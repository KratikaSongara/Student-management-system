package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.Course;
import com.example.demo.model.Student;
import com.example.demo.service.CourseService;

@RestController
@RequestMapping("/course")
public class CourseController {
	@Autowired
	private CourseService courseService;
	
	@PostMapping("/")
	public ResponseEntity<Course> uploadCourse(@RequestBody Course course) {
		return new ResponseEntity<>(courseService.uploadCourse(course), HttpStatus.ACCEPTED);
	}
	
	@GetMapping("/")
	public ResponseEntity<List<Course>> getAllCourses() {
		return new ResponseEntity<>(courseService.getAllCourses(), HttpStatus.ACCEPTED);
	}
	
	@DeleteMapping("/{courseId}/")
	public ResponseEntity<String> removeCourse(@PathVariable("courseId") Integer courseId) {
		return new ResponseEntity<>(courseService.removeCourse(courseId), HttpStatus.ACCEPTED);
	}
	
	@PutMapping("/{courseId}/")
	public ResponseEntity<Course> updateCourseDetails(@PathVariable("courseId") Integer courseId, @RequestBody Course course) {
		return new ResponseEntity<>(courseService.updateCourse(courseId, course), HttpStatus.ACCEPTED);
	}
	
	@GetMapping("/{studentId}/")
	public ResponseEntity<List<Course>> getAssignedCoursesOfStudentHandler(@PathVariable("studentId") Integer studentId) {
		return new ResponseEntity<>(courseService.searchAssignedCourseForStudent(studentId), HttpStatus.ACCEPTED);
	}
	
	@GetMapping("/{courseId}/")
	public ResponseEntity<List<Student>> getStudentsFromCourseHandler(@PathVariable("courseId") Integer courseId) {
		return new ResponseEntity<>(courseService.getStudentsFromCourse(courseId), HttpStatus.ACCEPTED);
	}
}
